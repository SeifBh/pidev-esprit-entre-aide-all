package com.mycompany.myapp;

import static com.codename1.ui.CN.*;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;
import java.io.IOException;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.io.NetworkEvent;
import com.codename1.ui.Container;
import com.codename1.ui.FontImage;
import com.codename1.ui.Image;
import com.codename1.ui.events.ActionEvent;
import com.codename1.ui.events.ActionListener;
import com.codename1.ui.layouts.BorderLayout;
import edu.pidev.gui.events.EvenementsGui;
import edu.pidev.gui.spotted.AjoutPublication;
import edu.pidev.gui.spotted.ListPublication;
import edu.pidev.gui.spotted.ModifPublication;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename
 * One</a> for the purpose of building native mobile applications using Java.
 */
public class MyApplication {

    private Form current;
    private Resources theme;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if (err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });
    }

    public void start() {
        if (current != null) {
            current.show();
            return;
        }
        Form f = new Form("Acceuil Spotted");
        System.out.println("------------------------------ Nous sommes dans le Main ------------------------------");

        Label welcome = new Label("Bienvenue Spotted");
        AjoutPublication ajoutpublication = new AjoutPublication();
        ListPublication listpublication = new ListPublication();
        ModifPublication modifpublication = new ModifPublication();
        Toolbar tb = f.getToolbar();
        Image logo = theme.getImage("round.jpg");
        Container cn = BorderLayout.west(new Label(logo));
        cn.add(BorderLayout.SOUTH, "Bievenue Spotted");
        f.show();

        tb.addMaterialCommandToSideMenu("Ajout Publication", FontImage.MATERIAL_WEB, e -> {
            ajoutpublication.getF().show();
        });

//        ajoutpublication.getF().getToolbar().addMaterialCommandToLeftBar("Back", FontImage.MATERIAL_HOTEL, b -> {
//            f.showBack();
//        });
        ajoutpublication.getF().getToolbar().addCommandToLeftBar("retour", theme.getImage("back-command.png"), b -> {
            f.showBack();

        });

        tb.addMaterialCommandToSideMenu("List Publication", FontImage.MATERIAL_WEB, e -> {
            listpublication.getF().show();
        });

        listpublication.getF().getToolbar().addCommandToLeftBar("retour", theme.getImage("back-command.png"), b -> {
            f.showBack();

        });

//        listpublication.getF().getToolbar().addMaterialCommandToLeftBar("Back", FontImage.MATERIAL_HOTEL, b -> {
//            f.showBack();
//        });
        modifpublication.getF().getToolbar().addCommandToLeftBar("retour", theme.getImage("back-command.png"), b -> {
            f.show();

        });

//        modifpublication.getF().getToolbar().addMaterialCommandToLeftBar("Back", FontImage.MATERIAL_HOTEL, b -> {
//            System.out.println("Bonjour"); 
//            f.show();
//           // listpublication.getF().show();
//        });
//        
    }

    public void stop() {
        current = getCurrentForm();
        if (current instanceof Dialog) {
            ((Dialog) current).dispose();
            current = getCurrentForm();
        }
    }

    public void destroy() {
    }

}
